package com.materiel.suite.client.ui.interventions;

import com.materiel.suite.client.model.BillingLine;
import com.materiel.suite.client.model.Resource;
import com.materiel.suite.client.model.ResourceRef;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/** Utilitaires pour générer rapidement des lignes de pré-devis depuis des ressources. */
public final class PreDevisUtil {
  private PreDevisUtil(){
  }

  public static List<BillingLine> fromResources(List<Resource> resources){
    ArrayList<BillingLine> out = new ArrayList<>();
    if (resources == null){
      return out;
    }
    for (Resource resource : resources){
      if (resource == null){
        continue;
      }
      out.add(fromResource(resource));
    }
    return out;
  }

  public static List<BillingLine> fromResourceRefs(List<ResourceRef> refs, Map<UUID, Resource> catalog){
    ArrayList<BillingLine> out = new ArrayList<>();
    if (refs == null){
      return out;
    }
    for (ResourceRef ref : refs){
      if (ref == null){
        continue;
      }
      Resource resource = ref.getId() != null && catalog != null ? catalog.get(ref.getId()) : null;
      BillingLine line;
      if (resource != null){
        line = fromResource(resource);
        if (ref.getName() != null && !ref.getName().isBlank()){
          line.setDesignation(ref.getName());
        }
      } else {
        line = new BillingLine();
        line.setId(UUID.randomUUID().toString());
        line.setAutoGenerated(true);
        if (ref.getId() != null){
          line.setResourceId(ref.getId().toString());
        }
        line.setDesignation(ref.getName() != null && !ref.getName().isBlank() ? ref.getName() : "Ressource");
        line.setUnit("u");
        line.setQuantity(BigDecimal.ONE);
        line.setUnitPriceHt(BigDecimal.ZERO);
        line.setTotalHt(BigDecimal.ZERO);
      }
      out.add(line);
    }
    return out;
  }

  private static BillingLine fromResource(Resource resource){
    BillingLine line = new BillingLine();
    line.setId(UUID.randomUUID().toString());
    line.setAutoGenerated(true);
    if (resource.getId() != null){
      line.setResourceId(resource.getId().toString());
    }
    String designation = resource.getName();
    line.setDesignation(designation != null && !designation.isBlank() ? designation : "Ressource");
    line.setUnit("u");
    line.setQuantity(BigDecimal.ONE);
    BigDecimal price = resource.getUnitPriceHt();
    if (price == null){
      price = BigDecimal.ZERO;
    }
    line.setUnitPriceHt(price);
    line.setTotalHt(price.multiply(line.getQuantity()));
    return line;
  }
}
