openapi: 3.0.1
info:
  title: Gestion Materiel API
  version: '1.0'
paths:
  /api/v2/agencies:
    get:
      summary: Lister les agences (v2)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgencyV2'
  /api/v2/auth/login:
    post:
      summary: Connexion (v2)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginV2Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserV2'
        '401':
          description: Unauthorized
  /api/v2/users:
    get:
      summary: Lister les utilisateurs (v2)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserV2'
    post:
      summary: Créer un utilisateur (v2)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserV2'
  /api/v2/users/{id}:
    put:
      summary: Mettre à jour un utilisateur (v2)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserV2'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserV2'
    delete:
      summary: Supprimer un utilisateur (v2)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
  /api/v2/users/{id}/password:
    post:
      summary: Définir le mot de passe d'un utilisateur (v2)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordUpdateRequest'
      responses:
        '204':
          description: Updated
  /api/v2/interventions:
    get:
      summary: Lister les interventions (v2, mock)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InterventionV2'
  /api/v2/interventions/{id}:
    get:
      summary: Récupérer une intervention (v2)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterventionV2'
        '404':
          description: Not Found
    put:
      summary: Mettre à jour une intervention (v2)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterventionV2'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterventionV2'
  /api/v1/quotes:
    get:
      summary: List quotes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quote'
    post:
      summary: Create quote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quote'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
  /api/v1/orders:
    get:
      summary: List orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Create order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /api/v1/resources:
    get:
      summary: List resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
    post:
      summary: Create resource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/v1/resources/{id}:
    put:
      summary: Update resource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
    delete:
      summary: Delete resource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Deleted
  /api/v1/resource-types:
    get:
      summary: List resource types
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceType'
    post:
      summary: Create resource type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceType'
  /api/v1/resource-types/{code}:
    put:
      summary: Update resource type
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceType'
    delete:
      summary: Delete resource type
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
  /api/v1/resources/{id}/unavailability:
    get:
      summary: List resource unavailability periods
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Unavailability'
    post:
      summary: Add unavailability period
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unavailability'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unavailability'
  /api/v1/resources/{id}/unavailability/{uid}:
    delete:
      summary: Remove unavailability period
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: uid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Deleted
  /api/v2/intervention-types:
    get:
      summary: List intervention types (v2)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InterventionTypeV2'
    post:
      summary: Create intervention type (v2)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterventionTypeV2'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterventionTypeV2'
  /api/v2/intervention-types/{id}:
    get:
      summary: Get intervention type (v2)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterventionTypeV2'
        '404':
          description: Not found
    put:
      summary: Update intervention type (v2)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterventionTypeV2'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterventionTypeV2'
    delete:
      summary: Delete intervention type (v2)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
components:
  schemas:
    DocumentLine:
      type: object
      properties:
        designation:
          type: string
        quantite:
          type: number
        prixUnitaireHT:
          type: number
        remisePct:
          type: number
        tvaPct:
          type: number
    Quote:
      type: object
      properties:
        id:
          type: string
          format: uuid
        number:
          type: string
        lines:
          type: array
          items:
            $ref: '#/components/schemas/DocumentLine'
        totalHT:
          type: number
          format: double
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        number:
          type: string
        lines:
          type: array
          items:
            $ref: '#/components/schemas/DocumentLine'
        totalHT:
          type: number
          format: double
    InterventionResourceRef:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        icon:
          type: string
          description: "Icône simple (emoji, caractère)"
    Resource:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          $ref: '#/components/schemas/ResourceType'
        unitPriceHt:
          type: number
          format: double
          description: 'Prix unitaire HT associé à la ressource'
        color:
          type: string
        notes:
          type: string
        capacity:
          type: integer
        tags:
          type: string
        weeklyUnavailability:
          type: string
        unavailabilities:
          type: array
          items:
            $ref: '#/components/schemas/Unavailability'
    AgencyV2:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    InterventionV2:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        plannedStart:
          type: string
          format: date-time
        plannedEnd:
          type: string
          format: date-time
        clientId:
          type: string
        address:
          type: string
        quoteId:
          type: string
          description: 'Lien devis si généré'
        quoteReference:
          type: string
          description: 'Référence devis lisible'
        workflowStage: { type: string, enum: ["INTERVENTION","DEVIS","FACTURATION"] }
        generalDone:
          type: boolean
        detailsDone:
          type: boolean
        billingReady:
          type: boolean
        billingLines:
          type: array
          items:
            type: object
    UserV2:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        displayName:
          type: string
        role:
          type: string
          enum: [ADMIN, SALES, CONFIG]
        agency:
          $ref: '#/components/schemas/AgencyV2'
        token:
          type: string
          description: "Jeton optionnel (mock) — support pour JWT ultérieur"
    UserCreateRequest:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserV2'
        password:
          type: string
    PasswordUpdateRequest:
      type: object
      required: [newPassword]
      properties:
        newPassword:
          type: string
    LoginV2Request:
      type: object
      required: [agencyId, username, password]
      properties:
        agencyId:
          type: string
        username:
          type: string
        password:
          type: string
    InterventionTypeV2:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        iconKey:
          type: string
        orderIndex:
          type: integer
          description: "Ordre d'affichage (0 = premier)"
    Intervention:
      type: object
      properties:
        id:
          type: string
          format: uuid
        resourceId:
          type: string
          format: uuid
          description: "Ressource principale (compatibilité)"
        resources:
          type: array
          items:
            $ref: '#/components/schemas/InterventionResourceRef'
        clientName:
          type: string
        siteLabel:
          type: string
        craneName:
          type: string
        truckName:
          type: string
        driverName:
          type: string
        agency:
          type: string
        status:
          type: string
        favorite:
          type: boolean
        quoteNumber:
          type: string
        quoteId:
          type: string
          format: uuid
          description: Identifiant du devis lié
        quoteReference:
          type: string
          description: Référence lisible du devis lié
        orderNumber:
          type: string
        deliveryNumber:
          type: string
        invoiceNumber:
          type: string
        color:
          type: string
        description:
          type: string
        internalNote:
          type: string
        closingNote:
          type: string
        signatureBy:
          type: string
        signatureAt:
          type: string
          format: date-time
        signaturePngBase64:
          type: string
          description: "Signature client encodée en base64 (PNG sans préfixe data:)"
        locked:
          type: boolean
        dateHeureDebut:
          type: string
          format: date-time
        dateHeureFin:
          type: string
          format: date-time
    ResourceType:
      type: object
      required: [code]
      properties:
        code:
          type: string
        label:
          type: string
        icon:
          type: string
    Unavailability:
      type: object
      required: [start, end]
      properties:
        id:
          type: string
          format: uuid
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        reason:
          type: string
